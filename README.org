* IMAP Filter, the Rust version                                    :TOC_5_gh:
  - [[#introduction][Introduction]]
  - [[#documentation][Documentation]]
    - [[#installation][Installation]]
    - [[#dsl-is-lua][DSL is Lua]]
  - [[#notes][Notes]]
    - [[#gui-support][GUI support]]
    - [[#old-ruby-dsl-example][Old Ruby DSL example]]
    - [[#lua-dsl-example][Lua DSL example]]

** Introduction
   IMAP Filter is a port of RubyGem of the same name.
   We wish to leverage Rust to do this, and also
   to provide more features and the like.
** Documentation
*** Installation
    Everything is based on Lua version 5.3.
    
    You must have Lua installed. On Ubuntu:
    #+begin_src bash
    apt install liblua5.3-dev liblua5.3-0
    #+end_src

    It might also be helpful to have LuaRocks installed. It will
    allow you to use various Lua libraries in your script, though
    you should not need them at all.

    In case you do, refer to:
    https://luarocks.org/
    for the installation instructions and general documentation.

    But generally, you'll want to install this with for lua 5.3. You may
    have an earlier version of Lua installed on your (presumably Linux)
    system. In which case, do the following:

    #+being_src bash
    # installation for a Unix-like system (Linux or macOS, etc.)
    wget https://luarocks.org/releases/luarocks-3.3.0.tar.gz
    tar zxpf luarocks-3.3.0.tar.gz
    cd luarocks-3.3.0
    ./configure --lua-version=5.3 --versioned-rocks-dir && make && sudo make install

    # test that luarocks works.
    sudo luarocks install luasocket
    lua5.3
    # Lua 5.3.5 Copyright (C) 1994-2018 Lua.org, PUC-Rio
    # > require "socket"
    #+end_src

*** DSL is Lua
    We are using Lua as the DSL to implement
    the configuration for the functioning of
    IMAP Filter. The syntax should be close to the
    Ruby DSL, but there will be some differences.

** Notes
*** GUI support
    Initially, we shall rely on Qt. Later, we will
    replace it with our own GUI.
*** Old Ruby DSL example
    We put this here as a reference. We'll have
    to decide how this looks in Lua.

    #+begin_src ruby
# My Email accounts
account :gmx do
  login ENV['GMX_EMAIL'], ENV['GMX_PASS']
  serv "imap.gmx.net"
  ssl true
  auth :login
  port 993
end

account :yahoo do
  login ENV['YAHOO_EMAIL'], ENV['YAHOO_PASS']
  serv 'imap.mail.yahoo.com'
  auth :login
end

account :google do
  login ENV['GOOGLE_EMAIL'], ENV['GOOGLE_PASS']
  serv "imap.gmail.com"
  auth :plain
end

filter :slashdot, 'gmx:INBOX', from: 'slashdot' do
  mark :seen
  cp 'google:INBOX'
  mv 'gmx:Slashdot'
end

filter :github, 'gmx:INBOX' do
  search do
    from 'github.com'
    unseen
  end

  cp 'google:news/Github'
  mv 'gmx:Github'
end

filter :gitter, 'gmx:INBOX', from: 'gitter' do
  mv 'gmx:Gitter'
end

filter :xing, 'gmx:INBOX', from: 'xing.com' do
  mv 'gmx:XING'
  unmark :seen
end

filter :neat, 'yahoo:NEAT', :unseen do
  cp 'gmx:Lists/NEAT'
  mark :seen
end

filter :science, 'yahoo:Wissenschaft', :unseen do
  cp 'gmx:Lists/Wissenschaft'
  mark :seen
end


filter :spam, 'gmx:INBOX', from: ['news.brgmedia.com', 'travel.hoteltravel-email.com'] do
  delete
end

activate :all
    #+end_src

*** Lua DSL example
    #+begin_src lua
    -- GMX account 
    account "gmx" {   
       login { user = env 'GMX_EMAIL', pass = env 'GMX_PASS' }
       serv "imap.gmx.net"
       ssl
       auth "login"
       port "993"
    }

    -- Yahoo account
    account "yahoo" {
       login { user = env "YAHOO_EMAIL", pass = env 'YAHOO_PASS' }
       serv 'imap.mail.yahoo.com'
       auth "login"
       tls
    }

    -- Google account
    account "google" {
       login { user = env 'GOOGLE_EMAIL', pass = env 'GOOGLE_PASS' }
       serv "imap.gmail.com"
       auth "plain"
    }

    filter "slashdot" {
       search 'gmx:INBOX' {
          from = 'slashdot',
       }
       mark "seen"
       copy 'google:INBOX'
       move 'gmx:Slashdot'
    }

    filter :github, {
       search 'gmx:INBOX' {
          from 'github.com'
          unseen
       }

       copy 'google:news/Github'
       move 'gmx:Github'
    }

    filter :spam,   {
       search 'gmx:INBOX' {
          from = {'news.brgmedia.com', 'travel.hoteltravel-email.com'}
       }
       delete
    }
    #+end_src
